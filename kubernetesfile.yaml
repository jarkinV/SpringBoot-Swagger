apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  creationTimestamp: "2020-07-13T06:00:58Z"
  generation: 2
  labels:
    app: spring-boot-test
  name: spring-boot-test
  namespace: default
  resourceVersion: "2664085"
  selfLink: /apis/apps/v1/namespaces/default/deployments/spring-boot-test
  uid: 1953c04e-003c-4e18-80a0-a7798d5d9e87
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: spring-boot-test
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: spring-boot-test
    spec:
      containers:
        - image: gcr.io/eternal-trainer-271923/springboot-example@sha256:2ee26cac3beb60f9a974147a289aa89dba7a725a9dc185f2128548ddf0c7090e
          imagePullPolicy: IfNotPresent
          name: springboot-example-sha256-1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status:
  availableReplicas: 1
  conditions:
    - lastTransitionTime: "2020-07-13T06:01:05Z"
      lastUpdateTime: "2020-07-13T06:01:05Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2020-07-13T06:00:58Z"
      lastUpdateTime: "2020-07-13T06:01:05Z"
      message: ReplicaSet "spring-boot-test-85c8f9d5f7" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
  observedGeneration: 2
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
